library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(tidyverse)
library(tidyverse)
clear
install.packages("tidyverse")
library(tidyverse)
head(iris)
summary(iris)
install.packages("pacman")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("purrr")
install.packages("readr")
library(nycflights13)
flights
?flights
?dplyr
install.packages("dpylr")
?dplyr
??dplyr
?dplyr
install.packages("dplyr")
?dplyr
?dplyr
?tidyr
?dplyr
?dplyr
?flights
library(dplyr)
filter(flights, month == 1, day == 10)
jan1 <- filter(flights, month==1, day==1)
View(jan1)
aug8 <- filter(flights, month==8, day==8)
(aug8 <- filter(flights, month==8, day==8))
sqrt(2) ^ 2
sqrt(2) ^ 2 == 2
near(sqrt(2) ^2, 2)
filter(flights, month==10 | month==11)
filter(flights, month %in% c(10,11))
# find flights that are not dealyed by more than two hours
flights
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, arr_delay <= 120 | dep_delay <= 120)
# Missing values, NA
NA > 5
NA == NA
# x be my weight, y be my wife's weight
x <- 90
y <- 40
x > y
x < y
x <- NA
y <- NA
x == y
is.na(x)
x <- 0
is.na(x)
df <- tibble(x = c(100, NA, 300))
df
filter(x > 90)
filter(df, x > 90)
filter(df, x > 200)
install.packages("ISLR")
install.packages("tidyverse")
df = read.csv('insurance.csv', header=TRUE)
pwd
setwd("~/Desktop/r-projects/regression-in-r-health-data-analysis")
df = read.csv('insurance.csv', header=TRUE)
num_cols <- unlist(lapply(df, is.numeric))
plot(df[,num_cols])
knitr::opts_chunk$set(echo=TRUE)
# Libraries
df = read.csv('insurance.csv', header=TRUE)
num_cols <- unlist(lapply(df, is.numeric))
plot(df[,num_cols])
round(cor(df[,num_cols]), 2)
region = as.factor(df$region)
smoker = as.factor(df$smoker)
sex = as.factor(df$sex)
region = as.factor(df$region)
boxplot(df$charges ~ region, main='region')
boxplot(df$charges ~ smoker, main='Smoker')
boxplot(df$charges ~ sex, main='sex')
boxplot(df$charges ~ region, main='region')
model1 = lm(charges ~. , data=df)
summary(model)
model1 = lm(charges ~. , data=df)
summary(model)
summary(model)
summary(model1)
